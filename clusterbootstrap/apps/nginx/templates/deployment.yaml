apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels: { app: nginx }
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: { app: nginx }
  template:
    metadata:
      labels: { app: nginx }
    spec:
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: tpl
          configMap:
            name: nginx-content
            items:
              - key: index.html.tmpl
                path: index.html.tmpl
        - name: webroot
          emptyDir: {}
      initContainers:
        - name: render
          image: alpine:3.20
          command:
            - /bin/sh
            - -c
            - |
              set -e
              # Compute timestamp once at container start
              export SERVED_AT="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
              # Render the template using env vars into the served directory
              envsubst < /config/index.html.tmpl > /work/index.html
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # If your nodes don't carry topology.kubernetes.io/zone, you can remove this var.
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['topology.kubernetes.io/zone']"
          volumeMounts:
            - name: tpl
              mountPath: /config
            - name: webroot
              mountPath: /work
      containers:
        - name: nginx
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: webroot
              mountPath: /usr/share/nginx/html
