apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels: { app: nginx }
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: { app: nginx }
  template:
    metadata:
      labels: { app: nginx }
    spec:
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: html
          configMap:
            name: nginx-content
            items:
              - key: index.html
                path: index.html
        - name: conf
          configMap:
            name: nginx-content
            items:
              - key: default.conf
                path: default.conf
        - name: podinfo
          downwardAPI:
            items:
              - path: "podname"
                fieldRef:
                  fieldPath: metadata.name
              - path: "namespace"
                fieldRef:
                  fieldPath: metadata.namespace
              - path: "nodename"
                fieldRef:
                  fieldPath: spec.nodeName
              # If this label doesn't exist in your cluster, remove this item.
              - path: "zone"
                fieldRef:
                  fieldPath: "metadata.labels['topology.kubernetes.io/zone']"
      containers:
        - name: nginx
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet: { path: "/", port: 8080 }
            initialDelaySeconds: 5
          livenessProbe:
            httpGet: { path: "/", port: 8080 }
            initialDelaySeconds: 15
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
              readOnly: true
            - name: conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: true
