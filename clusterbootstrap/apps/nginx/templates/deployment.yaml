apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels: { app: nginx }
  template:
    metadata:
      labels: { app: nginx }
    spec:
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: tpl
          configMap:
            name: nginx-content
            items:
              - key: index.html.tmpl
                path: index.html.tmpl
        - name: webroot
          emptyDir: {}
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged:stable-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name          # ✅ pod name via Downward API (env)
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName          # ✅ node name via Downward API (env)
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              cp /config/index.html.tmpl /usr/share/nginx/html/index.html
              sed -i "s|__POD_NAME__|${POD_NAME}|g" /usr/share/nginx/html/index.html
              sed -i "s|__NODE_NAME__|${NODE_NAME}|g" /usr/share/nginx/html/index.html
              exec nginx -g 'daemon off;'
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - { name: tpl,     mountPath: /config,                 readOnly: true }
            - { name: webroot, mountPath: /usr/share/nginx/html }  # writable webroot
